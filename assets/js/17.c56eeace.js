(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{291:function(e,s,t){"use strict";t.r(s);var a=t(13),r=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"安全性是如何保证的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全性是如何保证的"}},[e._v("#")]),e._v(" 安全性是如何保证的？")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("将容器内的root用户映射到主机的低权限用户")]),e._v(" "),s("p",[s("strong",[e._v("注意")]),e._v("：所有原有的镜像和容器都会被清除，请做好备份。")]),e._v(" "),s("blockquote",[s("p",[e._v("参考：https://docs.docker.com/engine/security/userns-remap/")]),e._v(" "),s("p",[e._v("如果遇到问题，参阅：https://docs.docker.com/engine/security/rootless/#troubleshooting")]),e._v(" "),s("p",[e._v("如果 Docker 还需要运行其他应用容器，需要以 "),s("strong",[e._v("host")]),e._v(" 模式执行对应容器，详见参考。")])]),e._v(" "),s("p",[e._v("将以下内容添加到 "),s("code",[e._v("/etc/docker/daemon.json")]),e._v("，并且重启 Docker 服务：")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"userns-remap"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"default"')]),e._v("\n")])])]),s("p",[e._v("执行 "),s("code",[e._v("grep dockremap /etc/subuid")]),e._v("，其中至少有一行是这样的，且能够正常启动 Docker 容器，即为配置完成：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("dockremap:100000:65535\n")])])])]),e._v(" "),s("li",[s("p",[e._v("Seccomp限制")]),e._v(" "),s("blockquote",[s("p",[e._v("参考：https://docs.docker.com/engine/security/seccomp/")])]),e._v(" "),s("p",[e._v("使用 Seccomp 对容器的系统调用权限进行限制，启动容器时添加：")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("--security-opt "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("seccomp")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/path/to/files/seccomp/default.json\n")])])]),s("p",[e._v("Docker 官方提供了 "),s("a",{attrs:{href:"https://github.com/moby/moby/blob/master/profiles/seccomp/default.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("default.json"),s("OutboundLink")],1),e._v(" 作为默认值和示例，项目也提供了范围更小的 "),s("a",{attrs:{href:"https://github.com/NicerWang/DJudger/blob/master/seccomp/default.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("default.json"),s("OutboundLink")],1),e._v("。")])]),e._v(" "),s("li",[s("p",[e._v("恢复策略")]),e._v(" "),s("p",[e._v("在每次代码运行结束后，执行测试代码，如果测试失败，则认为容器被破坏，删除容器；")]),e._v(" "),s("p",[e._v("如果测试通过，则认为容器能够正常运行，当前容器将会被复用。")])]),e._v(" "),s("li",[s("p",[e._v("时间限制")]),e._v(" "),s("p",[e._v("如果执行超时，则认为容器被破坏，删除容器。")])]),e._v(" "),s("li",[s("p",[e._v("网络")]),e._v(" "),s("p",[e._v("容器不能和任何网络连接，启动容器时添加：")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--network")]),e._v(" none\n")])])])]),e._v(" "),s("li",[s("p",[e._v("CPU和进程数限制")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--cpus")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n--pids-limit "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("30")]),e._v("\n")])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);